{
  "name": "lwjgl.org",
  "version": "1.5.0",
  "private": true,
  "license": "BSD-3-Clause",
  "description": "The website of LWJGL",
  "author": "Apostolos Tsakpinis <apostolos.tsakpinis@gmail.com>",
  "repository": {
    "type": "git",
    "url": "https://github.com/LWJGL/lwjgl3-www.git"
  },
  "bugs": {
    "url": "https://github.com/LWJGL/lwjgl3-www/issues"
  },
  "homepage": "https://github.com/LWJGL/lwjgl3-www#readme",
  "nodemonConfig": {
    "ext": "mjs,css",
    "watch": [
      "server/*"
    ]
  },
  "dependencies": {
    "@aws-sdk/client-s3": "3.95.0",
    "@fastify/accepts": "4.0.0",
    "@fastify/etag": "4.0.0",
    "@fastify/helmet": "9.1.0",
    "@fastify/http-proxy": "8.0.0",
    "@fastify/static": "6.4.0",
    "fastify": "4.0.0-rc.2",
    "point-of-view": "6.0.0",
    "pug": "3.0.2"
  },
  "devDependencies": {
    "@aws-sdk/client-cloudfront": "3.95.0",
    "@babel/core": "7.18.0",
    "@babel/preset-env": "7.18.0",
    "@babel/preset-react": "7.17.12",
    "@babel/preset-typescript": "7.17.12",
    "@pmmmwh/react-refresh-webpack-plugin": "github:pmmmwh/react-refresh-webpack-plugin",
    "@prettier/plugin-pug": "2.0.0",
    "@react-aria/button": "3.4.4",
    "@react-aria/dialog": "3.1.9",
    "@react-aria/focus": "3.5.5",
    "@react-aria/interactions": "3.8.4",
    "@react-aria/link": "3.2.5",
    "@react-aria/overlays": "3.8.2",
    "@react-aria/utils": "3.12.0",
    "@stitches/react": "1.2.8",
    "@types/lodash-es": "4.17.6",
    "@types/react-dom": "18.0.5",
    "@types/react-is": "17.0.3",
    "@types/scheduler": "0.16.2",
    "@typescript-eslint/eslint-plugin": "5.26.0",
    "@typescript-eslint/parser": "5.26.0",
    "autoprefixer": "10.4.7",
    "babel-loader": "8.2.5",
    "chalk": "5.0.1",
    "cli-table": "0.3.11",
    "click-to-react-component": "1.0.8",
    "core-js": "3.22.6",
    "cssnano": "5.1.9",
    "eslint": "8.16.0",
    "eslint-plugin-react-hooks": "0.0.0-experimental-82c64e1a4-20220520",
    "framer-motion": "6.3.3",
    "gzip-size": "7.0.0",
    "history": "5.3.0",
    "immer": "9.0.14",
    "jszip": "3.10.0",
    "lodash-es": "4.17.21",
    "npm-run-all": "4.1.5",
    "postcss": "8.4.14",
    "postcss-import": "14.1.0",
    "postcss-preset-env": "7.6.0",
    "postcss-scss": "4.0.4",
    "prettier": "2.6.2",
    "react": "0.0.0-experimental-82c64e1a4-20220520",
    "react-dom": "0.0.0-experimental-82c64e1a4-20220520",
    "react-error-boundary": "3.1.4",
    "react-fast-compare": "3.2.0",
    "react-is": "0.0.0-experimental-82c64e1a4-20220520",
    "react-refresh": "0.0.0-experimental-82c64e1a4-20220520",
    "reselect": "4.1.5",
    "scroll-into-view-if-needed": "2.2.29",
    "shiki": "0.10.1",
    "source-map-loader": "3.0.1",
    "typescript": "4.7.1-rc",
    "use-context-selector": "1.4.0",
    "webpack": "5.72.1",
    "webpack-cli": "4.9.2",
    "webpack-dev-server": "4.9.0"
  },
  "scripts": {
    "start": "run-p dev:js dev:server",
    "build:styles": "NODE_ENV=development node ./scripts/build-styles.mjs",
    "dev:js": "WDS=1 webpack serve",
    "dev:server": "NODE_ENV=development AWS_PROFILE=lwjgl node --no-warnings server/index.mjs",
    "dev:debug": "NODE_ENV=development AWS_PROFILE=lwjgl node --inspect --preserve-symlinks server/index.mjs",
    "dev:watch": "NODE_ENV=development AWS_PROFILE=lwjgl npx nodemon server/index.mjs",
    "dev:test-production": "NODE_ENV=production AWS_PROFILE=lwjgl node --no-warnings --max_old_space_size=384 server/index.mjs --test --s3proxy --nocache --pretty",
    "production": "run-p production:*",
    "production:styles": "NODE_ENV=production node ./scripts/build-styles.mjs",
    "production:js": "NODE_ENV=production node ./scripts/build-production.mjs",
    "post-production": "node --no-warnings ./scripts/post-production.mjs",
    "release": "run-s production post-production",
    "flush": "rm -r ./node_modules/.cache",
    "lint": "eslint --ext .ts,.js,.tsx client/",
    "prettier": "prettier --write \"{client,server,scripts}/**/*.{ts,tsx,js,mjs,md,css,pug}\"",
    "ncu": "npx npm-check-updates -i --configFileName ncu.json",
    "ncut": "npx npm-check-updates -t greatest --configFileName ncu.json",
    "ncun": "npx npm-check-updates -i -t newest --configFileName ncu-newest.json"
  }
}

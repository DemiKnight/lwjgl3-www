// Not actually SCSS, using this extension for inline comments syntax support

@import 'reset.scss';

body {
  background-color: var(--colors-body);
  color: var(--colors-text);

  // Disables pull-to-refresh and overscroll glow effect. Still keeps swipe navigations.
  // https://developers.google.com/web/updates/2017/11/overscroll-behavior
  overscroll-behavior-y: none;

  // // Always show scrollbar to avoid layout between page navigations
  // overflow-y: scroll;

  // Disable scroll anchoring
  // https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-anchor/Guide_to_scroll_anchoring
  overflow-anchor: none;

  // https://css-tricks.com/css-fix-for-100vh-in-mobile-webkit/
  // min-height: 100vh;
  // min-height: -webkit-fill-available;
}

// html {
//   height: -webkit-fill-available;
// }

pre {
  overflow-x: auto;
}

// // https://mobile.twitter.com/JoshWComeau/status/1332015868725891076
// a {
//   scroll-margin-top: 3rem;
//   scroll-snap-margin-top: 3rem;  // Safari fallback
// }

:root {
  --scale: 1;
  --scale-sm: 1;

  // // Responsive text-size
  // // https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
  // --min-fs: 1;
  // --max-fs: 1.25;
  // --min-vw: 20;
  // --max-vw: 87.5;

  // --min-fs-rem: var(--min-fs) * 1rem;
  // --max-fs-rem: var(--max-fs) * 1rem;
  // --min-vw-rem: var(--min-vw) * 1rem;

  // --slope: (var(--max-fs) - var(--min-fs)) * (100vw - var(--min-vw-rem)) / (var(--max-vw) - var(--min-vw));

  // font-size: clamp(var(--min-fs-rem), var(--min-fs-rem) + var(--slope), var(--max-fs-rem));
}

@media (min-width: 768px) {
  :root {
    --scale: 1.125;
    --scale-sm: 1.0625;
  }
}

@media (min-width: 992px) {
  :root {
    --scale: 1.25;
    --scale-sm: 1.125;
  }
}

@media (min-width: 1200px) {
  :root {
    --scale: 1.5;
    --scale-sm: 1.1875;
  }
}

@media (min-width: 1400px) {
  :root {
    --scale: 2;
    --scale-sm: 1.25;
  }
}

.dark {
  // Smooth the font on the level of the pixel, as opposed to the subpixel. Switching from subpixel rendering to antialiasing for light text on dark backgrounds makes it look lighter.
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media (prefers-reduced-motion: reduce) {
  * {
    // Instead of disabling animations, reduce durations to 0
    // This avoids having to work around fill-mode styling (e.g. "forwards" should leave the element in end state after the animation has completed)
    animation-delay: 0s !important;
    animation-duration: 0s !important;
    transition-duration: 0s !important;
    // disable smooth scrolling
    scroll-behavior: auto !important;
  }
}

@media (prefers-reduced-motion: no-preference) {
  :focus:focus-visible {
    transition: outline-offset 0.125s ease-out;
    outline-offset: 3px;
  }
}

// .sr-only {
//   position: absolute;
//   width: 1px;
//   height: 1px;
//   padding: 0;
//   margin: -1px;
//   overflow: hidden;
//   clip: rect(0, 0, 0, 0);
//   white-space: nowrap;
//   border: 0;
// }

:not(a[rel='external'], a[target='_blank']) {
  -webkit-touch-callout: none; // https://mobile.twitter.com/argyleink/status/1407691912732086277
  -webkit-tap-highlight-color: transparent; // https://mobile.twitter.com/argyleink/status/1407329524631494656
}
